1) Write a program that does the following
Generates 10 Random 3 Digit numbers.
Store these random numbers into an array.
Then find the 2nd largest and the 2nd smallest element without sorting the array.
Extend the above program to sort the array and then find the 2nd largest and the 2nd smallest element.

nano -T3 10RANDOM3digitnumbers.sh

#!/bin/bash -x

declare -a randomArray
echo "Adding element to array "
nums=()
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)));
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))
nums+=($(((RANDOM%90)+100)))

echo "Here are the array elements: ${nums[@]}"

largest=${nums[0]}
smallest=${nums[0]}
secondLargest='unset'
secondSmallest='unset'

for((i=1; i < ${#nums[@]}; i++))
do

  if [[ ${nums[i]} > $largest ]]
  then
    secondLargest=$largest
    largest=${nums[i]}
  elif (( ${nums[i]} < $largest )) && (( ${nums[i]} > $secondLargest ))
  then
    secondLargest=${nums[i]}
  fi


  if [[ ${nums[i]} < $smallest ]]
  then
    secondSmallest=$smallest
    smallest=${nums[i]}
  elif [[ ${nums[i]} != $smallest && "$secondSmallest" = "unset" || ${nums[i]} < $secondSmallest ]] 
  then
    secondSmallest=${nums[i]}
  fi
done


echo "Second Largest value of an Unsorted Array is: $secondLargest"
echo "Second Smallest value of an Unsorted Array is: $secondSmallest"



for ((i=0;i<${#nums[@]};i++))
do
	for ((j=i+1;j<${#nums[@]};j++))
	do
		if [ ${nums[i]} -le ${nums[j]} ]
		then
			temp=${nums[i]};
			nums[i]=${nums[j]};
			nums[j]=$temp;
		fi
	done
done

echo "the second largest number in an array is ${nums[1]}";

echo "The Second Smallest number  in an array is ${nums[8]}";

echo "The Sorted Array is ${nums[@]}";


2) Write a program in the following steps
Roll a die and find the number between 1 to 6
Repeat the Die roll and find the result each time
Store the result in a dictionary
Repeat till any one of the numbers has reached 10 times
Find the number that reached maximum times and the one that was for minimum times


nano -T3 Rolldice10times.sh

#!/bin/bash -x
cnt1=0;
cnt2=0;
cnt3=0;
cnt4=0;
cnt5=0;
cnt6=0;

declare -A dice;
dice[1]=1;
dice[2]=2;
dice[3]=3;
dice[4]=4;
dice[5]=5;
dice[6]=6;

echo "${dice[6]}";
echo ${dice[@]};

for ((a=1;a<=60;a++))
do
   RollDice[$a]=$((RANDOM%6 + 1));
   echo "$a Time Dice Number is ${RollDice[a]}";

    if [ ${RollDice[a]} -eq ${dice[1]} ]
      then
         ((cnt1++));
      elif [ ${RollDice[a]} -eq ${dice[2]} ]
      then
         ((cnt2++));
      elif [ ${RollDice[a]} -eq ${dice[3]} ]
      then
         ((cnt3++));
      elif [ ${RollDice[a]} -eq ${dice[4]} ]
      then
         ((cnt4++));
      elif [ ${RollDice[a]} -eq ${dice[5]} ]
      then
         ((cnt5++));
      elif [ ${RollDice[a]} -eq ${dice[6]} ]
      then
         ((cnt6++));
	fi
	 if [[ $cnt1 -eq 10 || $cnt2 -eq 10 || $cnt3 -eq 10 || $cnt4 -eq 10 || $cnt5 -eq 10 || $cnt6 -eq 10 ]]
   then
      break;
   fi
done

echo "cnt1=$cnt1";
echo "cnt2=$cnt2";
echo "cnt3=$cnt3";
echo "cnt4=$cnt4";
echo "cnt5=$cnt5";
echo "cnt6=$cnt6";

cnt=0;
for ((cnt=0;cnt<6;cnt++))
do
	dicecnt[$cnt]=($cnt1 $cnt2 $cnt3 $cnt4 $cnt5 $cnt6);
	echo "dice count is ${dicecnt[$cnt]}";
done